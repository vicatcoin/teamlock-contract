pragma soliditypp ^0.4.3;
//
// SafeMathBasic.solpp
//
// for reference see: https://gist.github.com/aerophile/f5bf7d75968f9464ee0d03d71cfb1c8b
//
library SafeMathBasic {
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a); // SafeMath: addition overflow
        return c;
    }

    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a); // SafeMath: subtraction overflow
        uint256 c = a - b;        
        return c;
    }

    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        require(c / a == b); // SafeMath: multiplication overflow
        return c;
    }

    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b > 0); // SafeMath: division by zero
        uint256 c = a / b;
        return c;
    }
}
